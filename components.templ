package main

import "fmt"
import "time"

var handle = templ.NewOnceHandle()

templ headerTemplate(name string) {
	<header data-testid="headerTemplate">
		<h1>{ name }</h1>
	</header>
}

templ footerTemplate() {
	<footer data-testid="footerTemplate">
		<div>&copy; { fmt.Sprintf("%d", time.Now().Year()) }</div>
	</footer>
}

templ navTemplate() {
	@handle.Once() {
		<script type="text/javascript">
			function navigateOnChange(event) {
				let input = document.getElementById('search_input');
				let timeout = null;

				input.addEventListener('keyup', function (e) {
				    clearTimeout(timeout);

				    timeout = setTimeout(function () {
					console.log('Input Value:', input.value);

					// Get the new value of the input 
					const newValue = event.target.value;

					// Navigate to the desired route
					window.location.href = '/results?q=' + newValue;
					    }, 1000);
				});
			}
		</script>
	}
	
	<nav data-testid="navTemplate">
		<ul>
			<li><a href="/">Home</a></li>
			<li><a href="/results">Results</a></li>
		</ul>
		<form >
			<input id="search_input" type="search" oninput="navigateOnChange(event)" autofocus></input>
		</form>
	</nav>
}

templ layout(name string) {
	<html>
		<head><title id="title">{ name }</title></head>
		<script type="text/javascript">
			function setField()  {
				console.log("foo");
				// get search string
				var qString = location.search;
				if (qString.indexOf('q') != -1) {
					var data = qString.substring(qString.indexOf('=') + 1, qString.length);
					document.getElementById("search_input").value = decodeURIComponent(data)
				}
			}
		</script>
		<body onload="setField()">
			@headerTemplate(name)
			@navTemplate()
			<main>
				{ children... }
			</main>
		</body>
		@footerTemplate()
	</html>
}

templ resultsTemplate(results []Result) {
	<div data-testid="resultsTemplate">
		for _, r := range results{
			<div data-testid="resultsTemplateResult">
				<div data-testid="resultsTemplateResultTitle">{ r.Title }</div>
				<div data-testid="resultsTemplateResultLink">{ r.Link }</div>
			</div>
		}
	</div>
}

templ home() {
	@layout("Home") {
		<div data-testid="homeTemplate">ohgolly</div>
	}
}

templ results(results []Result) {
	@layout("Results") {
		@resultsTemplate(results)
	}
}
